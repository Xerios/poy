import Foundations { print }

declare fun showType(value: _): Str

extend t[] {
    declare {
        let length: Num
        fun at(index: Num): t
        fun push(value: t): ()
    }
}

declare module Math {
    fun min(a: Num, b: Num): Num
}

fun zip(as: a[], bs: b[]) {
    let len = Math.min(as.length, bs.length)
    mut res = []
    print(showType(res))
    mut i = 0

    while i < len {
        print(showType(as))
        print(showType(bs))
        let pair = (as.at(i), bs.at(i))
        print(showType(pair))
        print(showType(res))
        res.push(pair)
        print(showType(res))
        i += 1
    }

    res
}

print(showType(zip))

mut vals = []
vals.push((1, true))

print(showType(vals))
